services:
  postgres:
    container_name: pgsql_ms
    image: postgres
    ports:
      - 5432:5432
    restart: unless-stopped
    environment:
      POSTGRES_USER: dekan
      POSTGRES_PASSWORD: s3cret
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - microservices-net

  mongodb:
    container_name: mongodb_ms
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: dekan
      MONGO_INITDB_ROOT_PASSWORD: s3cret
    volumes:
      - mongo:/data

  mongo-express:
    container_name: mongo-express_ms
    image: mongo-express
    ports:
      - 8081:8081
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: dekan
      ME_CONFIG_MONGODB_ADMINPASSWORD: s3cret
      ME_CONFIG_MONGODB_SERVER: mongodb

  mail-dev:
    container_name: maildev_ms
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - microservices-net

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - microservices-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - microservices-net

  zipkin: # distributed tracing
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  mongo: